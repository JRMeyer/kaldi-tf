#!/bin/bash

# Josh Meyer // jrmeyer.github.io

#
# this script should take in an ark file in txt form and return an arkfile
# in txt form

INARK=$1
OUTARK=$2

cp $INARK tmp.arkfile

# EGS --> CSV

python3 egs-to-csv.py tmp.arkfile ark.csv
# Split data into train / eval / all
# I know this isn't kosher, but right
# now idc about eval, it's just a step
# in the scripts
cp ark.csv all.csv
mv ark.csv train.csv
tail -n100 all.csv > eval.csv

# CSV --> TFRECORDS


python3 csv-to-tfrecords.py all.csv all.tfrecords
python3 csv-to-tfrecords.py eval.csv eval.tfrecords
python3 csv-to-tfrecords.py train.csv train.tfrecords


# TRAIN K-MEANS

# returns tf-labels.txt
time python3 train_and_eval.py

# VOTE FOR MAPPINGS

# cut -d' ' -f1 all.csv > kaldi-labels.txt
# paste -d' ' kaldi-labels.txt tf-labels.txt > combined-labels.txt
# python3 vote.py combined-labels.txt > mapping.txt
# python3 format-mapping.py mapping.txt formatted-mapping.txt



# # PERFORM MAPPING
# ./faster-mapping.sh tmp.arkfile formatted-mapping.txt `cat DIM` #DIM is a file generated by egs-to-csv.py
# cat ARK_split* > $OUTARK


# # CLEAN-UP

rm DIM tmp.arkfile ARK_split* mapping.txt kaldi-labels.txt combined-labels.txt eval.csv train.csv all.tfrecords eval.tfrecords train.tfrecords formatted-mapping.txt

# echo "Your original Kaldi egs ($INARK) have been modified and save to $OUTARK"
