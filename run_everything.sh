#!/bin/bash

# Josh Meyer // jrmeyer.github.io

#
# this script should take in an ark file in txt form and return an arkfile
# in txt form



# given the name of the experiment, this script assumes file structure
# that I've got set up
exp_name=${1}
path_to_exp="/home/ubuntu/kaldi/egs/multi-task-kaldi/mtk/MTL/exp/${exp_name}/nnet3/egs"



if [ 1 ]; then
    echo "### CONVERTING BINARY EGS TO TEXT ###"
    echo "LOOKING FOR EGS IN ${path_to_exp}"
    # binary --> text
    KALDI=/home/ubuntu/kaldi/src/nnet3bin/nnet3-copy-egs
    $KALDI ark:${path_to_exp}/egs.1.ark ark,t:org-txt-ark
    $KALDI ark:${path_to_exp}/valid_diagnostic.egs ark,t:valid-txt-ark
    $KALDI ark:${path_to_exp}/train_diagnostic.egs ark,t:train-txt-ark
    $KALDI ark:${path_to_exp}/combine.egs ark,t:combine-txt-ark
fi



if [ 1 ]; then
    echo "### CONVERT EGS TO TFRECORDS  ###"
    # EGS --> CSV
    python3 egs-to-csv.py org-txt-ark ark.csv
    # Split data into train / eval / all
    # I know this isn't kosher, but right
    # now idc about eval, it's just a step
    # in the scripts
    cp ark.csv all.csv
    mv ark.csv train.csv
    tail -n100 all.csv > eval.csv
    # CSV --> TFRECORDS
    python3 csv-to-tfrecords.py all.csv all.tfrecords
    python3 csv-to-tfrecords.py eval.csv eval.tfrecords
    python3 csv-to-tfrecords.py train.csv train.tfrecords
    # TRAIN K-MEANS
    echo "### TRAIN AND EVAL MODEL  ###"
    echo "# remove old model in /tmp/tf"
    rm -rf /tmp/tf
    time python3 train_and_eval.py     ## returns tf-labels.txt
    
fi

# VOTE FOR MAPPINGS
if [ 1 ]; then
    cut -d' ' -f1 all.csv > kaldi-labels.txt
    paste -d' ' kaldi-labels.txt tf-labels.txt > combined-labels.txt
    python3 vote.py combined-labels.txt > mapping.txt
    python3 format-mapping.py mapping.txt formatted-mapping.txt
fi



if [ 1 ]; then
    # PERFORM MAPPING
    for egs in org-txt-ark valid-txt-ark train-txt-ark combine-txt-ark;  do
	./faster-mapping.sh $egs formatted-mapping.txt `cat DIM` #DIM is a file generated by egs-to-csv.py
	cat ARK_split* > ${egs}.mod
	rm ARK_split*
    done
fi


if [ 1 ]; then
    echo "TXT.egs --> BIN.egs ;; RENAME AND MOVE BIN.egs"  
    # text --> binary
    
    $KALDI ark,t:org-txt-ark.mod ark,scp:egs.1.ark,egs.scp
    $KALDI ark,t:valid-txt-ark.mod ark,scp:valid_diagnostic.egs,valid_diagnostic.scp
    $KALDI ark,t:train-txt-ark.mod ark,scp:train_diagnostic.egs,train_diagnostic.scp
    $KALDI ark,t:combine-txt-ark.mod ark,scp:combine.egs,combine.scp
    
    # fix paths
    egs_path="s/egs.1.ark/MTL\/exp\/${exp_name}\/nnet3\/egs\/egs.1.ark/g"
    valid_path="s/valid_diagnostic.egs/MTL\/exp\/${exp_name}\/nnet3\/egs\/valid_diagnostic.egs/g"
    train_path="s/train_diagnostic.egs/MTL\/exp\/${exp_name}\/nnet3\/egs\/train_diagnostic.egs/g"
    combine_path="s/combine.egs/MTL\/exp\/${exp_name}\/nnet3\/egs\/combine.egs/g"

    sed -Ei $egs_path egs.scp
    sed -Ei $valid_path valid_diagnostic.scp
    sed -Ei $train_path train_diagnostic.scp
    sed -Ei $combine_path combine.scp
    
    # move old egs to tmp dir
    mkdir ${path_to_exp}/org-scp-ark
    mv ${path_to_exp}/*.scp ${path_to_exp}/*.ark ${path_to_exp}/*.egs ${path_to_exp}/org-scp-ark/.

    # move new to org dir
    mv *.scp *.ark *.egs ${path_to_exp}/.
    
    echo "### OLD ARKS and SCPs moved to ${path_to_exp}/org-scp-ark/"
    echo "### NEW ARKS just renamed to standard names"
fi


rm *-txt-ark DIM *.txt *.csv *.tfrecords *.tmp


